/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/sarek Nextflow base config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    A 'blank slate' config file, appropriate for general use on most high performance
    compute environments. Assumes that all software is installed and available on
    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.
----------------------------------------------------------------------------------------
*/

process {
  withName: 'UNZIP.*|UNTAR.*|TABIX.*|BUILD_INTERVALS|CREATE_INTERVALS_BED|VCFTOOLS|BCFTOOLS.*|SAMTOOLS_INDEX' {
    cpus = { check_max(1 * task.attempt, 'cpus') }
    memory = { check_max(1.GB * task.attempt, 'memory') }
  }
  withName: FASTQC {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(4.GB * task.attempt, 'memory') }
  }
  withName: FASTP {
    cpus = { check_max(8 * task.attempt, 'cpus') }
    memory = { check_max(4.GB * task.attempt, 'memory') }
  }
  withName: 'BWAMEM1_MEM|BWAMEM2_MEM' {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(16.GB * task.attempt, 'memory') }
  }
  withName: CNVKIT_BATCH {
    label = "process_high"
  }
  withName: 'GATK4_MARKDUPLICATES|GATK4SPARK_MARKDUPLICATES' {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(16.GB * task.attempt, 'memory') }
  }
  withName: 'GATK4_APPLYBQSR|GATK4SPARK_APPLYBQSR|GATK4_BASERECALIBRATOR|GATK4SPARK_BASERECALIBRATOR|GATK4_GATHERBQSRREPORTS' {
    cpus = { check_max(2 * task.attempt, 'cpus') }
    memory = { check_max(4.GB * task.attempt, 'memory') }
  }
  withName: MOSDEPTH {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(8.GB * task.attempt, 'memory') }
  }
  withName: 'STRELKA.*|MANTA.*' {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(8.GB * task.attempt, 'memory') }
  }
  withName: SAMTOOLS_CONVERT {
    memory = { check_max(4.GB * task.attempt, 'memory') }
  }
  withName: GATK4_MERGEVCFS {
    cpus = { check_max(2 * task.attempt, 'cpus') }
    memory = { check_max(4.GB * task.attempt, 'memory') }
  }
  withName: MULTIQC {
    cpus = { check_max(4 * task.attempt, 'cpus') }
    memory = { check_max(12.GB * task.attempt, 'memory') }
  }
}
